name: build

on: push

jobs:
  test_windows:
    runs-on: windows-latest
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-python@v4
        with:
          python-version: "3.10"

      - name: Install Project dependencies
        uses: py-actions/py-dependency-install@v4

      - name: Install testing dependencies
        run: |
          python -m pip install --upgrade pip
          pip install pylint pytest pytest-cov selenium playwright

      - name: Running pytest
        run: |
          pytest -v  --cov --cov-report=xml --cov-report=html --junitxml="xunit-result.xml"

      - uses: actions/upload-artifact@v3
        with:
          name: code-coverage
          path: htmlcov
  build:
    needs: test_windows
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-python@v4
        with:
          python-version: "3.10"

      - name: Install ffmpeg
        run: |
          sudo apt install software-properties-common
          sudo apt update
          sudo add-apt-repository ppa:jonathonf/ffmpeg-4
          sudo apt install ffmpeg

      - name: Install jq
        run: |
          sudo apt install jq

      - name: Install Project dependencies
        uses: py-actions/py-dependency-install@v4

      - name: Install testing dependencies
        run: |
          python -m pip install --upgrade pip
          pip install pylint pytest pytest-cov selenium playwright

      - name: Running pytest
        run: |
          pytest -v  --cov --cov-report=xml --cov-report=html --junitxml="xunit-result.xml"

      - uses: actions/upload-artifact@v3
        with:
          name: code-coverage
          path: htmlcov

      - name: SonarCloud Scan
        uses: SonarSource/sonarcloud-github-action@master
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}

      - name: Run Snyk to check for vulnerabilities
        uses: snyk/actions/python-3.10@master
        env:
          SNYK_TOKEN: ${{ secrets.SNYK_TOKEN }}
        with:
          command: monitor

      - name: Run poetry image
        uses: abatilo/actions-poetry@v2
        with:
          poetry-version: 1.4.0

      - name: Build and publish patch with poetry
        if: github.ref == 'refs/heads/main' && !startsWith(github.ref, 'refs/tags/v')
        run: |
          version=$(curl -s 'https://pypi.org/pypi/spotube/json' | jq -r '.info.version')
          poetry version $version
          poetry config pypi-token.pypi ${{ secrets.PYPI_TOKEN }}
          poetry version patch
          poetry build
          poetry publish

      - name: Build and publish minor with poetry
        if: startsWith(github.ref, 'refs/tags/v')
        run: |
          version=$(curl -s 'https://pypi.org/pypi/spotube/json' | jq -r '.info.version')
          poetry version $version
          poetry config pypi-token.pypi ${{ secrets.PYPI_TOKEN }}
          poetry version minor
          poetry build
          poetry publish